{"ast":null,"code":"import{useState,useMemo}from'react';/**\n * Custom hook for filtering cards by starred status\n * @param {Array} cards - Array of card objects\n * @returns {Object} - { filteredCards, practiceStarredOnly, togglePracticeStarred }\n */export const useStarredFilter=cards=>{const[practiceStarredOnly,setPracticeStarredOnly]=useState(false);const filteredCards=useMemo(()=>{if(!cards||cards.length===0)return[];if(practiceStarredOnly){// Handle both boolean true and SQLite integer 1\nconst starredCards=cards.filter(card=>card.starred===1);console.log('Filtering to starred only:',starredCards);console.log('Cards starred status:',cards.map(c=>({id:c.id,starred:c.starred})));return starredCards;}return cards;},[cards,practiceStarredOnly]);const togglePracticeStarred=()=>{setPracticeStarredOnly(prev=>!prev);};return{filteredCards,practiceStarredOnly,togglePracticeStarred,starredCount:cards?cards.filter(card=>card.starred).length:0,totalCount:cards?cards.length:0};};","map":{"version":3,"names":["useState","useMemo","useStarredFilter","cards","practiceStarredOnly","setPracticeStarredOnly","filteredCards","length","starredCards","filter","card","starred","console","log","map","c","id","togglePracticeStarred","prev","starredCount","totalCount"],"sources":["/home/bclason/projects/spanish_app/flash_vocab/frontend/src/hooks/useStarredFilter.js"],"sourcesContent":["import { useState, useMemo } from 'react';\n\n/**\n * Custom hook for filtering cards by starred status\n * @param {Array} cards - Array of card objects\n * @returns {Object} - { filteredCards, practiceStarredOnly, togglePracticeStarred }\n */\nexport const useStarredFilter = (cards) => {\n  const [practiceStarredOnly, setPracticeStarredOnly] = useState(false);\n\n  const filteredCards = useMemo(() => {\n    if (!cards || cards.length === 0) return [];\n    \n    if (practiceStarredOnly) {\n      // Handle both boolean true and SQLite integer 1\n      const starredCards = cards.filter(card => card.starred === 1);\n      console.log('Filtering to starred only:', starredCards);\n      console.log('Cards starred status:', cards.map(c => ({ id: c.id, starred: c.starred })));\n      return starredCards;\n    }\n    \n    return cards;\n  }, [cards, practiceStarredOnly]);\n\n  const togglePracticeStarred = () => {\n    setPracticeStarredOnly(prev => !prev);\n  };\n\n  return {\n    filteredCards,\n    practiceStarredOnly,\n    togglePracticeStarred,\n    starredCount: cards ? cards.filter(card => card.starred).length : 0,\n    totalCount: cards ? cards.length : 0\n  };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAEzC;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,KAAK,EAAK,CACzC,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGL,QAAQ,CAAC,KAAK,CAAC,CAErE,KAAM,CAAAM,aAAa,CAAGL,OAAO,CAAC,IAAM,CAClC,GAAI,CAACE,KAAK,EAAIA,KAAK,CAACI,MAAM,GAAK,CAAC,CAAE,MAAO,EAAE,CAE3C,GAAIH,mBAAmB,CAAE,CACvB;AACA,KAAM,CAAAI,YAAY,CAAGL,KAAK,CAACM,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,OAAO,GAAK,CAAC,CAAC,CAC7DC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEL,YAAY,CAAC,CACvDI,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEV,KAAK,CAACW,GAAG,CAACC,CAAC,GAAK,CAAEC,EAAE,CAAED,CAAC,CAACC,EAAE,CAAEL,OAAO,CAAEI,CAAC,CAACJ,OAAQ,CAAC,CAAC,CAAC,CAAC,CACxF,MAAO,CAAAH,YAAY,CACrB,CAEA,MAAO,CAAAL,KAAK,CACd,CAAC,CAAE,CAACA,KAAK,CAAEC,mBAAmB,CAAC,CAAC,CAEhC,KAAM,CAAAa,qBAAqB,CAAGA,CAAA,GAAM,CAClCZ,sBAAsB,CAACa,IAAI,EAAI,CAACA,IAAI,CAAC,CACvC,CAAC,CAED,MAAO,CACLZ,aAAa,CACbF,mBAAmB,CACnBa,qBAAqB,CACrBE,YAAY,CAAEhB,KAAK,CAAGA,KAAK,CAACM,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,OAAO,CAAC,CAACJ,MAAM,CAAG,CAAC,CACnEa,UAAU,CAAEjB,KAAK,CAAGA,KAAK,CAACI,MAAM,CAAG,CACrC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}