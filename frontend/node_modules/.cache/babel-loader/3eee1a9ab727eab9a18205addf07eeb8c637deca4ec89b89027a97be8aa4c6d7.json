{"ast":null,"code":"import _objectSpread from\"/home/bclason/projects/spanish_app/flash_vocab/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{useDraggable}from'@dnd-kit/core';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Draggable(props){const{attributes,listeners,setNodeRef,transform}=useDraggable({id:props.id||'draggable'});const style=transform?{transform:\"translate3d(\".concat(transform.x,\"px, \").concat(transform.y,\"px, 0)\")}:undefined;return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},listeners),attributes),{},{children:props.children}));}","map":{"version":3,"names":["React","useDraggable","jsx","_jsx","Draggable","props","attributes","listeners","setNodeRef","transform","id","style","concat","x","y","undefined","_objectSpread","ref","children"],"sources":["/home/bclason/projects/spanish_app/flash_vocab/frontend/src/hooks/draggable.js"],"sourcesContent":["import React from 'react';\nimport {useDraggable} from '@dnd-kit/core';\n\nexport default function Draggable(props) {\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: props.id || 'draggable',\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n  } : undefined;\n\n  \n  return (\n    <button ref={setNodeRef} style={style} {...listeners} {...attributes}>\n      {props.children}\n    </button>\n  );\n}"],"mappings":"mIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAAQC,YAAY,KAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3C,cAAe,SAAS,CAAAC,SAASA,CAACC,KAAK,CAAE,CACvC,KAAM,CAACC,UAAU,CAAEC,SAAS,CAAEC,UAAU,CAAEC,SAAS,CAAC,CAAGR,YAAY,CAAC,CAClES,EAAE,CAAEL,KAAK,CAACK,EAAE,EAAI,WAClB,CAAC,CAAC,CACF,KAAM,CAAAC,KAAK,CAAGF,SAAS,CAAG,CACxBA,SAAS,gBAAAG,MAAA,CAAiBH,SAAS,CAACI,CAAC,SAAAD,MAAA,CAAOH,SAAS,CAACK,CAAC,UACzD,CAAC,CAAGC,SAAS,CAGb,mBACEZ,IAAA,UAAAa,aAAA,CAAAA,aAAA,CAAAA,aAAA,EAAQC,GAAG,CAAET,UAAW,CAACG,KAAK,CAAEA,KAAM,EAAKJ,SAAS,EAAMD,UAAU,MAAAY,QAAA,CACjEb,KAAK,CAACa,QAAQ,EACT,CAAC,CAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}