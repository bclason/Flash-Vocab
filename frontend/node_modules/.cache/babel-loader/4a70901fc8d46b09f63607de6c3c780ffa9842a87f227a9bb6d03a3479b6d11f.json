{"ast":null,"code":"import{useNavigate,useLocation}from'react-router-dom';import{useState,useEffect}from'react';import{useStarredFilter}from'../hooks/useStarredFilter';import MiniQuizMode from'../components/medleyModes/MiniQuizMode';import config from'../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MiniQuiz(){const navigate=useNavigate();const[cards,setCards]=useState([]);const{state}=useLocation();const listId=state===null||state===void 0?void 0:state.listId;const listName=state===null||state===void 0?void 0:state.listName;const{practiceStarredOnly,togglePracticeStarred,starredCount,totalCount}=useStarredFilter(cards);// Fetch all cards when the component mounts\nuseEffect(()=>{if(!listId)return;// Fetch all cards from your backend\nfetch(\"\".concat(config.API_BASE_URL,\"/lists/\").concat(listId,\"/cards\")).then(res=>{if(!res.ok){throw new Error(\"HTTP error! status: \".concat(res.status));}return res.json();}).then(data=>{console.log('Fetched cards:',data);if(data&&Array.isArray(data)){setCards(data);}else{console.error('Expected array but got:',data);setCards([]);}}).catch(err=>{console.error('Failed to fetch cards',err);setCards([]);});},[listId]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',textAlign:'center',alignItems:'center',padding:'.2rem',fontSize:'1.5rem'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>navigate('/'),children:\" Home\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'center',justifyContent:'center',gap:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:togglePracticeStarred,title:practiceStarredOnly?\"Practice all cards (\".concat(totalCount,\")\"):\"Practice only starred cards (\".concat(starredCount,\")\"),style:{fontSize:'3rem',background:'none',border:'none',cursor:'pointer'},children:practiceStarredOnly?'★':'☆'}),/*#__PURE__*/_jsxs(\"h1\",{style:{fontSize:'52px',fontWeight:'bolder'},children:[\"Flash Quiz: \",listName]})]}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'1.5rem'},children:\"Speed through your terms and see how many you can get right! Just type and hit enter.\"}),/*#__PURE__*/_jsx(MiniQuizMode,{cards:cards,practiceStarredOnly:practiceStarredOnly})]});}","map":{"version":3,"names":["useNavigate","useLocation","useState","useEffect","useStarredFilter","MiniQuizMode","config","jsx","_jsx","jsxs","_jsxs","MiniQuiz","navigate","cards","setCards","state","listId","listName","practiceStarredOnly","togglePracticeStarred","starredCount","totalCount","fetch","concat","API_BASE_URL","then","res","ok","Error","status","json","data","console","log","Array","isArray","error","catch","err","children","style","display","textAlign","alignItems","padding","fontSize","type","onClick","flexDirection","justifyContent","gap","title","background","border","cursor","fontWeight"],"sources":["/home/bclason/projects/spanish_app/flash_vocab/frontend/src/pages/mini.js"],"sourcesContent":["import { useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useStarredFilter } from '../hooks/useStarredFilter';\nimport MiniQuizMode from '../components/medleyModes/MiniQuizMode';\nimport config from '../config';\n\nexport default function MiniQuiz() {\n  const navigate = useNavigate();\n  const [cards, setCards] = useState([]);\n\n  const { state } = useLocation();\n  const listId = state?.listId;\n  const listName = state?.listName;\n\n  const { practiceStarredOnly, togglePracticeStarred, starredCount, totalCount } = useStarredFilter(cards);\n\n  // Fetch all cards when the component mounts\n  useEffect(() => {\n    if (!listId) return;\n    // Fetch all cards from your backend\n    fetch(`${config.API_BASE_URL}/lists/${listId}/cards`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log('Fetched cards:', data);\n        if (data && Array.isArray(data)) {\n          setCards(data);\n        } else {\n          console.error('Expected array but got:', data);\n          setCards([]);\n        }\n      })\n      .catch(err => {\n        console.error('Failed to fetch cards', err);\n        setCards([]);\n      });\n  }, [listId]);\n\n  return (\n    <div>\n      {/* Home button */}\n      <div style={{\n        display: 'flex',\n        textAlign: 'center',\n        alignItems: 'center',\n        padding: '.2rem',\n        fontSize: '1.5rem',\n      }}>\n          <button\n            type=\"button\"\n            onClick={() => navigate('/')}\n          > Home</button>\n      </div>\n\n      {/* Starred, Title, List */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1rem',\n      }}>\n        <button \n          onClick={togglePracticeStarred}\n          title={practiceStarredOnly ? `Practice all cards (${totalCount})` : `Practice only starred cards (${starredCount})`}\n          style={{\n            fontSize: '3rem',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer',\n          }}>\n          {practiceStarredOnly ? '★' : '☆'}\n        </button>\n        <h1 style={{\n          fontSize: '52px',\n          fontWeight: 'bolder',\n        }}>Flash Quiz: {listName}</h1>\n      </div>\n\n      {/* Description */}\n      <p style={{\n        textAlign: 'center',\n        fontSize: '1.5rem',\n      }}>\n        Speed through your terms and see how many you can get right! Just type and hit enter.\n      </p>\n\n      {/* MiniQuizMode component */}\n      <MiniQuizMode \n        cards={cards}\n        practiceStarredOnly={practiceStarredOnly}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}