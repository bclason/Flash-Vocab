{"ast":null,"code":"import{useState}from'react';import{useNavigate}from'react-router-dom';import config from'../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CustomDropdown(_ref){let{listId,listName}=_ref;const[open,setOpen]=useState(false);const navigate=useNavigate();const updateUsedStats=()=>{fetch(\"\".concat(config.API_BASE_URL,\"/lists/\").concat(listId),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:listId,name:listName,last_used:new Date().toISOString().slice(0,19).replace('T',' ')})}).then(res=>{if(!res.ok)throw new Error('Failed to update stats');}).catch(err=>console.error('Error updating stats:',err));};const handleFlashcards=()=>{updateUsedStats();navigate('/flashcards',{state:{listName:listName,listId:listId}});};const handleFlashQuiz=()=>{updateUsedStats();navigate('/mini',{state:{listName:listName,listId:listId}});};const handleFullQuiz=()=>{updateUsedStats();navigate('/quiz',{state:{listName:listName,listId:listId}});};const handleMedley=()=>{navigate('/medley',{state:{listName:listName,listId:listId}});};return/*#__PURE__*/_jsx(\"div\",{style:{position:'relative',display:'inline-block'},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOpen(!open),children:\"Practice\"}),open&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',top:'100%',left:0,backgroundColor:'white',border:'1px solid #ccc',boxShadow:'0 2px 5px rgba(0,0,0,0.1)',padding:'0.5rem',display:'flex',flexDirection:'column',gap:'0.5rem',zIndex:1000},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleFlashcards,children:\"Flashcards\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFlashQuiz,children:\"Flash Quiz\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFullQuiz,children:\"Full Quiz\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleMedley,children:\"Medley\"})]})]})});}","map":{"version":3,"names":["useState","useNavigate","config","jsx","_jsx","jsxs","_jsxs","CustomDropdown","_ref","listId","listName","open","setOpen","navigate","updateUsedStats","fetch","concat","API_BASE_URL","method","headers","body","JSON","stringify","id","name","last_used","Date","toISOString","slice","replace","then","res","ok","Error","catch","err","console","error","handleFlashcards","state","handleFlashQuiz","handleFullQuiz","handleMedley","style","position","display","children","onClick","top","left","backgroundColor","border","boxShadow","padding","flexDirection","gap","zIndex"],"sources":["/home/bclason/projects/spanish_app/flash_vocab/frontend/src/components/dropdown.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\n\n\nexport default function CustomDropdown({ listId, listName }) {\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const updateUsedStats = () => {\n    fetch(`${config.API_BASE_URL}/lists/${listId}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: listId, name: listName, last_used: new Date().toISOString().slice(0, 19).replace('T', ' ') })\n    })\n      .then(res => {\n        if (!res.ok) throw new Error('Failed to update stats');\n      })\n      .catch(err => console.error('Error updating stats:', err));\n  };\n\n  const handleFlashcards = () => {\n    updateUsedStats();\n    navigate('/flashcards', { state: { listName: listName, listId: listId } });\n  };\n\n  const handleFlashQuiz = () => {\n    updateUsedStats();\n    navigate('/mini', { state: { listName: listName, listId: listId } });\n    };\n\n  const handleFullQuiz = () => {\n    updateUsedStats();\n    navigate('/quiz', { state: { listName: listName, listId: listId } });\n  };\n\n  const handleMedley = () => {\n    navigate('/medley', { state: { listName: listName, listId: listId } });\n  };\n\n  return (\n    <div style={{ position: 'relative', display: 'inline-block' }}>\n    <div>\n      <button onClick={() => setOpen(!open)}>\n        Practice\n      </button>\n\n      {open && (\n        <div style={{\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n          padding: '0.5rem',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '0.5rem',\n          zIndex: 1000,\n        }}>\n          <button onClick={handleFlashcards}>Flashcards</button>\n          <button onClick={handleFlashQuiz}>Flash Quiz</button>\n          <button onClick={handleFullQuiz}>Full Quiz</button>\n          <button onClick={handleMedley}>Medley</button>\n        </div>\n        \n      )}\n    </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}